{
  "openapi": "3.0.3",
  "info": {
    "title": "App API",
    "description": "Development documentation",
    "version": "1.0.0"
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "age": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "email",
          "name"
        ],
        "$id": "#/components/schemas/user"
      },
      "errorResponse": {
        "title": "Error form Response",
        "type": "object",
        "properties": {
          "fields": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "properties": {

            }
          }
        },
        "required": [
          "fields"
        ],
        "$id": "#/components/schemas/errorResponse"
      },
      "authResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number"
              },
              "email": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "age": {
                "type": "number"
              }
            },
            "required": [
              "id",
              "email",
              "name"
            ],
            "$id": "#/components/schemas/user"
          }
        },
        "required": [
          "token",
          "user"
        ],
        "$id": "#/components/schemas/authResponse"
      }
    }
  },
  "paths": {
    "/exist": {
      "post": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "exist": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "exist"
                  ]
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "exist": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "exist"
                  ]
                }
              },
              "text/plain": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "exist": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "exist"
                  ]
                }
              }
            }
          }
        },
        "operationId": "postExist",
        "summary": "Check if user exists",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ],
                "additionalProperties": false
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ],
                "additionalProperties": false
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/user/me": {
      "get": {
        "responses": {
          "200": {
            "description": "User data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getUserMe",
        "summary": "Get current user data",
        "description": "Returns the authenticated user's profile information",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user/name": {
      "patch": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "User name updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            }
          }
        },
        "operationId": "patchUserName",
        "summary": "Update user name",
        "description": "Updates the authenticated user's display name",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "minLength": 1,
                    "maxLength": 50,
                    "description": "User's display name",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "minLength": 1,
                    "maxLength": 50,
                    "description": "User's display name",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "minLength": 1,
                    "maxLength": 50,
                    "description": "User's display name",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "operationId": "getHealth",
        "responses": {
          "200": {

          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authResponse"
                }
              }
            }
          },
          "422": {
            "description": "User already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "operationId": "postAuthRegister",
        "summary": "Sign up the user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Expected an email and password (+ age if experiment enabled)",
                "type": "object",
                "properties": {
                  "email": {
                    "format": "email",
                    "maxLength": 50,
                    "description": "User email (max 50 characters)",
                    "type": "string"
                  },
                  "password": {
                    "minLength": 5,
                    "maxLength": 20,
                    "description": "User password (5-20 characters)",
                    "type": "string"
                  },
                  "age": {
                    "minimum": 0,
                    "maximum": 99,
                    "description": "User age (0-99, optional)",
                    "type": "number"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "description": "Expected an email and password (+ age if experiment enabled)",
                "type": "object",
                "properties": {
                  "email": {
                    "format": "email",
                    "maxLength": 50,
                    "description": "User email (max 50 characters)",
                    "type": "string"
                  },
                  "password": {
                    "minLength": 5,
                    "maxLength": 20,
                    "description": "User password (5-20 characters)",
                    "type": "string"
                  },
                  "age": {
                    "minimum": 0,
                    "maximum": 99,
                    "description": "User age (0-99, optional)",
                    "type": "number"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "description": "Expected an email and password (+ age if experiment enabled)",
                "type": "object",
                "properties": {
                  "email": {
                    "format": "email",
                    "maxLength": 50,
                    "description": "User email (max 50 characters)",
                    "type": "string"
                  },
                  "password": {
                    "minLength": 5,
                    "maxLength": 20,
                    "description": "User password (5-20 characters)",
                    "type": "string"
                  },
                  "age": {
                    "minimum": 0,
                    "maximum": 99,
                    "description": "User age (0-99, optional)",
                    "type": "number"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authResponse"
                }
              }
            }
          },
          "422": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "operationId": "postAuthLogin",
        "summary": "Sign in the user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "format": "email",
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "format": "email",
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "format": "email",
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        }
      }
    }
  }
}
